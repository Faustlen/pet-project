spring:
  application:
    name: NotificationSender
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
    consumer:
      group-id: kafka-example-group
      auto-offset-reset: earliest
      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      max-poll-records: 10
      properties:
        spring.json.trusted.packages: '*'
        spring.json.value.default.type: com.example.dto.BuildingDto
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    template:
      default-topic: ${KF_TOPIC}
  mail:
    host: smtp.yandex.ru
    port: 465
    protocol: smtps
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}

server:
  port: 8083